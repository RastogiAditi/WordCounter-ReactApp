[{"C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\index.js":"1","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\App.js":"2","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\reportWebVitals.js":"3","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\TextForm.js":"4","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\About.js":"5","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\Alert.js":"6","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\Navbar.js":"7","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\Footer.js":"8"},{"size":535,"mtime":1690281490977,"results":"9","hashOfConfig":"10"},{"size":1981,"mtime":1693119639790,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1690281491195,"results":"12","hashOfConfig":"10"},{"size":5140,"mtime":1693122871551,"results":"13","hashOfConfig":"10"},{"size":4939,"mtime":1693070821005,"results":"14","hashOfConfig":"10"},{"size":530,"mtime":1693070708849,"results":"15","hashOfConfig":"10"},{"size":1646,"mtime":1693055643330,"results":"16","hashOfConfig":"10"},{"size":2220,"mtime":1693070716093,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"31m9vb",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\index.js",[],[],"C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\App.js",["45"],[],"// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   // Link,\n//   // Outlet,\n// } from \"react-router-dom\";\nimport { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Footer from './components/Footer';\n\nfunction App() {\n//dark mode enbale fumction\n  const [mode,setMode]=useState('light');\n    const [alert,setAlert]=useState(null);\n\n    const showAlert=(msg,type)=>{\n      setAlert({\n        msg:msg,\n        type:type\n\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      },2000);\n    }\n\n  const toggleMode=()=>{\n    if(mode=== 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark Mode is on....... \",\"success\");\n    }\n    else{\n      setMode('light');\n      \n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode is on....... \",\"success\");\n    }\n  }\n  return (\n  \n  //   <BrowserRouter>\n  //   <div>\n      \n  //   <Navbar title=\"WordCounter\" mode={mode} toggleMode={toggleMode}/>\n  //       <Alert alert={alert}/>\n  //       {/* <TextForm showAlert={showAlert} heading=\"Enter your text\" mode={mode} /> */}\n  //   <Routes>\n  //   <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter your text\" mode={mode} />}/>\n  //    <Route path=\"/about\" element={<About />} />      \n      \n  //   </Routes>\n  //   </div>\n  // </BrowserRouter>\n    <div>\n       <Navbar title=\"WordCounter\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div>\n          {/* <About mode={mode}/> */}\n        <TextForm showAlert={showAlert} heading=\"Word Counter : Word Count| Character Count | Time Count for Reading Word\" mode={mode} /> \n  \n        </div>\n        <div><Footer/></div>\n       </div>\n    \n    \n\n  );\n\n   \n  \n}\n\nexport default App;\n\n\n\n","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\reportWebVitals.js",[],[],"C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\TextForm.js",[],[],"C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\About.js",[],[],"C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\Alert.js",[],[],"C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\Navbar.js",["46","47"],[],"import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props){\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-disabled=\"true\" to=\"/about\">About{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n           {/*dark mode switch.................... */}\r\n           <div className={`form-check form-switch text-${props.mode ==='light'? 'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\nNavbar.propTypes={title:PropTypes.string}\r\nexport default Navbar;","C:\\Study_Material\\Programming\\WordCounter-ReactApp\\src\\components\\Footer.js",["48"],[],"import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      <footer className=\"text-center text-white\" style={{backgroundColor: '#f1f1f1;'}}>\r\n  {/* <!-- Grid container --> */}\r\n  <div className=\"container pt-4\">\r\n    {/* <!-- Section: Social media --> */}\r\n    <section className=\"mb-4\">\r\n      {/* <!-- Facebook --> */}\r\n      <a\r\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n        href=\"#!\"\r\n        role=\"button\"\r\n        data-mdb-ripple-color=\"dark\"\r\n        ><i className=\"fab fa-facebook-f\"></i\r\n      ></a>\r\n\r\n      {/* <!-- Twitter --> */}\r\n      <a\r\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n        href=\"#!\"\r\n        role=\"button\"\r\n        data-mdb-ripple-color=\"dark\"\r\n        ><i className=\"fab fa-twitter\"></i\r\n      ></a>\r\n\r\n      {/* <!-- Google --> */}\r\n      <a\r\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n        href=\"#!\"\r\n        role=\"button\"\r\n        data-mdb-ripple-color=\"dark\"\r\n        ><i className=\"fab fa-google\"></i\r\n      ></a>\r\n\r\n      {/* <!-- Instagram --> */}\r\n      <a\r\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n        href=\"#!\"\r\n        role=\"button\"\r\n        data-mdb-ripple-color=\"dark\"\r\n        ><i className=\"fab fa-instagram\"></i\r\n      ></a>\r\n\r\n      {/* <!-- Linkedin --> */}\r\n      <a\r\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n        href=\"#!\"\r\n        role=\"button\"\r\n        data-mdb-ripple-color=\"dark\"\r\n        ><i className=\"fab fa-linkedin\"></i\r\n      ></a>\r\n      {/* <!-- Github --> */}\r\n      <a\r\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n        href=\"#!\"\r\n        role=\"button\"\r\n        data-mdb-ripple-color=\"dark\"\r\n        ><i className=\"fab fa-github\"></i\r\n      ></a>\r\n    </section>\r\n    {/* <!-- Section: Social media --> */}\r\n  </div>\r\n  {/* <!-- Grid container --> */}\r\n\r\n  {/* <!-- Copyright --> */}\r\n  <div className=\"text-center text-dark p-3\" style={{backgroundColor: 'rgba(0, 0, 0, 0.2);'}}>\r\n    Â© 2023 Copyright:\r\n    <a className=\"text-dark\" href=\"#\">rastogiaditi1995@gmail.com</a>\r\n  </div>\r\n  {/* <!-- Copyright --> */}\r\n</footer>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"49","severity":1,"message":"50","line":14,"column":8,"nodeType":"51","messageId":"52","endLine":14,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":10,"column":11,"nodeType":"55","endLine":10,"endColumn":48},{"ruleId":"53","severity":1,"message":"54","line":17,"column":17,"nodeType":"55","endLine":17,"endColumn":77},{"ruleId":"53","severity":1,"message":"54","line":71,"column":5,"nodeType":"55","endLine":71,"endColumn":39},"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]