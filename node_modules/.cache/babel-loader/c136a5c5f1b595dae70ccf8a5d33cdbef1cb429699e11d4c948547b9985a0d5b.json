{"ast":null,"code":"import _slicedToArray from\"C:/Study_Material/Programming/WordCounter-ReactApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TextForm(props){//Upper Casing Method...............\nvar clickToUpperCase=function clickToUpperCase(){var newText=text.toUpperCase();setText(newText);props.showAlert(\"Upper Casing is done....... \",\"success\");};var handleOnChange=function handleOnChange(event){var newText=event.target.value;if(newText.length===null){setWordCount(newText.length);}else{setText(event.target.value);var words=newText.trim().split(/\\s+/);setWordCount(words.length);}};//  Lower Casing Method...............\nvar clickToLowerCase=function clickToLowerCase(){var lowerText=text.toLowerCase();setText(lowerText);props.showAlert(\"lower Casing is done....... \",\"success\");};//Camel Casing Method...............\n// const capitalize = (word) => {\n//   let lower = word.toLowerCase();\n//   return lower.charAt(0).toUpperCase() + lower.slice(1);\n// };\n// const clickToCamelCase = () => {\n//   const arr = text.split(/[.]/);\n//   // for(let i=0; i<text.split(\".\").length; i++){\n//   //   arr[i].splice(text.split(\".\"));\n//   // }\n//   // console.log(typeof(arr));\n//  const camelText=[];\n//   for (let i = 0; i < arr.length; i++) {\n//      camelText[i] = arr[i].charAt(0).toUpperCase() +arr[i].slice(1);\n//   }\n//    setText(camelText);\n// };\n//Clear text....................\nvar clearText=function clearText(){var clearTxt=\"\";setText(clearTxt);props.showAlert(\"All text is deleted. \",\"success\");};// Copytext......................\nvar copyText=function copyText(){var textCopy=document.getElementById(\"myBox\");textCopy.select();navigator.clipboard.writeText(textCopy.value);props.showAlert(\"Text is copied \",\"success\");};//Paste Text.........................\nvar pasteText=function pasteText(){var textCopy=text;setText(text+\"\\n\"+textCopy);props.showAlert(\"Text is pasted  \",\"success\");};var _useState=useState(\"Enter Your Text\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(3),_useState4=_slicedToArray(_useState3,2),wordCount=_useState4[0],setWordCount=_useState4[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid\",style:{color:props.mode===\"dark\"?\"white\":\"black\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:props.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:text,onChange:handleOnChange,id:\"myBox\",rows:\"8\",style:{background:props.mode===\"dark\"?\"grey\":\"white\",color:props.mode===\"dark\"?\"white\":\"black\"}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid\",style:{color:props.mode===\"dark\"?\"white\":\"black\"},align:\"center\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:clickToUpperCase,children:\"Covert to UpperCase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:clickToLowerCase,children:\"Convert to LowerCase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:clearText,children:\"Clear\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary \",onClick:copyText,children:[\" \",\"Copy\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary mx-2\",onClick:pasteText,children:[\" \",\"Paste\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{background:props.mode===\"dark\"?\"light\":\"dark\",color:props.mode===\"dark\"?\"white\":\"black\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Text Summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[wordCount,\" Words and \",text.length,\" Characters\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[0.008*text.split(\" \").length,\" Time Taken To Read \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[text.split(\".\").length-1,\" Sentences\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[text.split(\"\\n\").length-1,\" Paragraphs \"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Preview Text\"}),/*#__PURE__*/_jsx(\"p\",{children:text})]})]});}export default TextForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","TextForm","props","clickToUpperCase","newText","text","toUpperCase","setText","showAlert","handleOnChange","event","target","value","length","setWordCount","words","trim","split","clickToLowerCase","lowerText","toLowerCase","clearText","clearTxt","copyText","textCopy","document","getElementById","select","navigator","clipboard","writeText","pasteText","_useState","_useState2","_slicedToArray","_useState3","_useState4","wordCount","className","style","color","mode","children","heading","onChange","id","rows","background","align","onClick"],"sources":["C:/Study_Material/Programming/WordCounter-ReactApp/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nfunction TextForm(props) {\r\n  //Upper Casing Method...............\r\n  const clickToUpperCase = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Upper Casing is done....... \", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    const newText = event.target.value;\r\n    if(newText.length===null){\r\n      setWordCount(newText.length);\r\n    }\r\n    else{\r\n    setText(event.target.value);\r\n    const words = newText.trim().split(/\\s+/);\r\n      setWordCount(words.length);\r\n    }\r\n   \r\n  };\r\n\r\n  //  Lower Casing Method...............\r\n  const clickToLowerCase = () => {\r\n    let lowerText = text.toLowerCase();\r\n    setText(lowerText);\r\n    props.showAlert(\"lower Casing is done....... \", \"success\");\r\n  };\r\n  //Camel Casing Method...............\r\n  // const capitalize = (word) => {\r\n  //   let lower = word.toLowerCase();\r\n  //   return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  // };\r\n  // const clickToCamelCase = () => {\r\n  //   const arr = text.split(/[.]/);\r\n  //   // for(let i=0; i<text.split(\".\").length; i++){\r\n  //   //   arr[i].splice(text.split(\".\"));\r\n  //   // }\r\n  //   // console.log(typeof(arr));\r\n  //  const camelText=[];\r\n  //   for (let i = 0; i < arr.length; i++) {\r\n  //      camelText[i] = arr[i].charAt(0).toUpperCase() +arr[i].slice(1);\r\n      \r\n  //   }\r\n  //    setText(camelText);\r\n  // };\r\n\r\n  //Clear text....................\r\n  const clearText = () => {\r\n    let clearTxt = \"\";\r\n    setText(clearTxt);\r\n    props.showAlert(\"All text is deleted. \", \"success\");\r\n  };\r\n  // Copytext......................\r\n  const copyText = () => {\r\n    var textCopy = document.getElementById(\"myBox\");\r\n    textCopy.select();\r\n    navigator.clipboard.writeText(textCopy.value);\r\n    props.showAlert(\"Text is copied \", \"success\");\r\n  };\r\n  //Paste Text.........................\r\n  const pasteText = () => {\r\n    let textCopy = text;\r\n    setText(text + \"\\n\" + textCopy);\r\n    props.showAlert(\"Text is pasted  \", \"success\");\r\n  };\r\n  const [text, setText] = useState(\"Enter Your Text\");\r\n  const [wordCount, setWordCount] = useState(3);\r\n \r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n    >\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n          style={{\r\n            background: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n        align=\"center\"\r\n      >\r\n        <button className=\"btn btn-primary mx-2\" onClick={clickToUpperCase}>\r\n          Covert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={clickToLowerCase}>\r\n          Convert to LowerCase\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={clearText}>\r\n          Clear\r\n        </button>\r\n        <button className=\"btn btn-primary \" onClick={copyText}>\r\n          {\" \"}\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={pasteText}>\r\n          {\" \"}\r\n          Paste\r\n        </button>\r\n\r\n        {/* <button className=\"btn btn-primary\" onClick={clickToCamelCase}>\r\n          {\" \"}\r\n          Convert to CamelCase\r\n        </button> */}\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          background: props.mode === \"dark\" ? \"light\" : \"dark\",\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n        {wordCount} Words and {text.length} Characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Time Taken To Read </p>\r\n        <p>{text.split(\".\").length-1} Sentences</p>\r\n        <p>{text.split(\"\\n\").length-1} Paragraphs </p>\r\n        <h2>Preview Text</h2>\r\n        <p>{text}</p>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default TextForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}