{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study_Material\\\\Programming\\\\WordCounter-ReactApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route\n// Link,\n// Outlet,\n} from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport Footer from \"./components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //dark mode enbale fumction\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark Mode is on....... \", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode is on....... \", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"WordCounter\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            showAlert: showAlert,\n            heading: \"Enter your text\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)\n  // <div>\n  //    <Navbar title=\"WordCounter\" mode={mode} toggleMode={toggleMode}/>\n  //     <Alert alert={alert}/>\n  //     <div>\n  //       {/* <About mode={mode}/> */}\n  //     <TextForm showAlert={showAlert} heading=\"Word Counter : Word Count| Character Count | Time Count for Reading Word\" mode={mode} />\n\n  //     </div>\n  //     <div><Footer/></div>\n  //    </div>\n  ;\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useState","About","Navbar","TextForm","Alert","Footer","jsxDEV","_jsxDEV","App","_s","mode","setMode","alert","setAlert","showAlert","msg","type","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Study_Material/Programming/WordCounter-ReactApp/src/App.js"],"sourcesContent":["import {\n  BrowserRouter,\n  Routes,\n  Route,\n  // Link,\n  // Outlet,\n} from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  //dark mode enbale fumction\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark Mode is on....... \", \"success\");\n    } else {\n      setMode(\"light\");\n\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode is on....... \", \"success\");\n    }\n  };\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar title=\"WordCounter\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        {/* <TextForm showAlert={showAlert} heading=\"Enter your text\" mode={mode} /> */}\n        <Routes>\n          <Route\n           exact path=\"/\"\n            element={\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter your text\"\n                mode={mode}\n              />\n            }\n          />\n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </BrowserRouter>\n    // <div>\n    //    <Navbar title=\"WordCounter\" mode={mode} toggleMode={toggleMode}/>\n    //     <Alert alert={alert}/>\n    //     <div>\n    //       {/* <About mode={mode}/> */}\n    //     <TextForm showAlert={showAlert} heading=\"Word Counter : Word Count| Character Count | Time Count for Reading Word\" mode={mode} />\n\n    //     </div>\n    //     <div><Footer/></div>\n    //    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SACEA,aAAa,EACbC,MAAM,EACNC;AACA;AACA;AAAA,OACK,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,SAAS,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC/BH,QAAQ,CAAC;MACPE,GAAG,EAAEA,GAAG;MACRC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFC,UAAU,CAAC,MAAM;MACfJ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIR,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;MAC5CR,SAAS,CAAC,yBAAyB,EAAE,SAAS,CAAC;IACjD,CAAC,MAAM;MACLH,OAAO,CAAC,OAAO,CAAC;MAEhBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,0BAA0B,EAAE,SAAS,CAAC;IAClD;EACF,CAAC;EACD,oBACEP,OAAA,CAACV,aAAa;IAAA0B,QAAA,gBACZhB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA,CAACL,MAAM;QAACsB,KAAK,EAAC,aAAa;QAACd,IAAI,EAAEA,IAAK;QAACQ,UAAU,EAAEA;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClErB,OAAA,CAACH,KAAK;QAACQ,KAAK,EAAEA;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEvBrB,OAAA,CAACT,MAAM;QAAAyB,QAAA,gBACLhB,OAAA,CAACR,KAAK;UACL8B,KAAK;UAACC,IAAI,EAAC,GAAG;UACbC,OAAO,eACLxB,OAAA,CAACJ,QAAQ;YACPW,SAAS,EAAEA,SAAU;YACrBkB,OAAO,EAAC,iBAAiB;YACzBtB,IAAI,EAAEA;UAAK;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFrB,OAAA,CAACR,KAAK;UAAC+B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAExB,OAAA,CAACN,KAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNrB,OAAA;MAAAgB,QAAA,eACEhB,OAAA,CAACF,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO;EACf;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EAAA;AAEJ;AAACnB,EAAA,CA9DQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}