{"ast":null,"code":"import _slicedToArray from\"C:/Study_Material/Programming/WordCounter-ReactApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   // Link,\n//   // Outlet,\n// } from \"react-router-dom\";\nimport{useState}from'react';import'./App.css';// import About from './components/About';\nimport Navbar from\"./components/Navbar\";import TextForm from'./components/TextForm';import Alert from'./components/Alert';import About from'./components/About';import Footer from'./components/Footer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//dark mode enbale fumction\nvar _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(msg,type){setAlert({msg:msg,type:type});setTimeout(function(){setAlert(null);},2000);};var toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor='grey';showAlert(\"Dark Mode is on....... \",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"Light Mode is on....... \",\"success\");}};return/*#__PURE__*/ (//   <BrowserRouter>\n//   <div>\n//   <Navbar title=\"WordCounter\" mode={mode} toggleMode={toggleMode}/>\n//       <Alert alert={alert}/>\n//       {/* <TextForm showAlert={showAlert} heading=\"Enter your text\" mode={mode} /> */}\n//   <Routes>\n//   <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter your text\" mode={mode} />}/>\n//    <Route path=\"/about\" element={<About />} />      \n//   </Routes>\n//   </div>\n// </BrowserRouter>\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{title:\"WordCounter\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter your text\",mode:mode})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Footer,{})})]}));}export default App;","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","About","Footer","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setAlert","showAlert","msg","type","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","heading"],"sources":["C:/Study_Material/Programming/WordCounter-ReactApp/src/App.js"],"sourcesContent":["// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   // Link,\n//   // Outlet,\n// } from \"react-router-dom\";\nimport { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Footer from './components/Footer';\n\nfunction App() {\n//dark mode enbale fumction\n  const [mode,setMode]=useState('light');\n    const [alert,setAlert]=useState(null);\n\n    const showAlert=(msg,type)=>{\n      setAlert({\n        msg:msg,\n        type:type\n\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      },2000);\n    }\n\n  const toggleMode=()=>{\n    if(mode=== 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark Mode is on....... \",\"success\");\n    }\n    else{\n      setMode('light');\n      \n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode is on....... \",\"success\");\n    }\n  }\n  return (\n  \n  //   <BrowserRouter>\n  //   <div>\n      \n  //   <Navbar title=\"WordCounter\" mode={mode} toggleMode={toggleMode}/>\n  //       <Alert alert={alert}/>\n  //       {/* <TextForm showAlert={showAlert} heading=\"Enter your text\" mode={mode} /> */}\n  //   <Routes>\n  //   <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter your text\" mode={mode} />}/>\n  //    <Route path=\"/about\" element={<About />} />      \n      \n  //   </Routes>\n  //   </div>\n  // </BrowserRouter>\n    <div>\n       <Navbar title=\"WordCounter\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div>\n          {/* <About mode={mode}/> */}\n        <TextForm showAlert={showAlert} heading=\"Enter your text\" mode={mode} /> \n  \n        </div>\n        <div><Footer/></div>\n       </div>\n    \n    \n\n  );\n\n   \n  \n}\n\nexport default App;\n\n\n\n"],"mappings":"wIAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB;AACA,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACf;AACE,IAAAC,SAAA,CAAqBX,QAAQ,CAAC,OAAO,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,IAAI,CAAAF,UAAA,IAACG,OAAO,CAAAH,UAAA,IACjB,IAAAI,UAAA,CAAuBhB,QAAQ,CAAC,IAAI,CAAC,CAAAiB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA9BE,KAAK,CAAAD,UAAA,IAACE,QAAQ,CAAAF,UAAA,IAErB,GAAM,CAAAG,SAAS,CAAC,QAAV,CAAAA,SAASA,CAAEC,GAAG,CAACC,IAAI,CAAG,CAC1BH,QAAQ,CAAC,CACPE,GAAG,CAACA,GAAG,CACPC,IAAI,CAACA,IAEP,CAAC,CAAC,CACFC,UAAU,CAAC,UAAI,CACbJ,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,IAAI,CAAC,CACT,CAAC,CAEH,GAAM,CAAAK,UAAU,CAAC,QAAX,CAAAA,UAAUA,CAAA,CAAK,CACnB,GAAGV,IAAI,GAAI,OAAO,CAClB,CACEC,OAAO,CAAC,MAAM,CAAC,CACfU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,MAAM,CAC1CR,SAAS,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAChD,CAAC,IACG,CACFL,OAAO,CAAC,OAAO,CAAC,CAEhBU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,OAAO,CAC3CR,SAAS,CAAC,0BAA0B,CAAC,SAAS,CAAC,CACjD,CACF,CAAC,CACD,oBAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACEX,KAAA,QAAAoB,QAAA,eACGtB,IAAA,CAACN,MAAM,EAAC6B,KAAK,CAAC,aAAa,CAAChB,IAAI,CAAEA,IAAK,CAACU,UAAU,CAAEA,UAAW,CAAC,CAAC,cAChEjB,IAAA,CAACJ,KAAK,EAACe,KAAK,CAAEA,KAAM,CAAC,CAAC,cACtBX,IAAA,QAAAsB,QAAA,cAEAtB,IAAA,CAACL,QAAQ,EAACkB,SAAS,CAAEA,SAAU,CAACW,OAAO,CAAC,iBAAiB,CAACjB,IAAI,CAAEA,IAAK,CAAE,CAAC,CAEnE,CAAC,cACNP,IAAA,QAAAsB,QAAA,cAAKtB,IAAA,CAACF,MAAM,GAAC,CAAC,CAAK,CAAC,EAChB,CAAC,EAQb,CAEA,cAAe,CAAAK,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}